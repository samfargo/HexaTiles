name: release
on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  linux:
    name: release (linux)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }
      - uses: actions/setup-go@v5
        with: { go-version: '1.22' }

      # Install H3 C library natively (CGO)
      - name: Install libh3
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake make gcc g++ git
          git clone --depth 1 https://github.com/uber/h3.git
          cd h3
          cmake -DBUILD_SHARED_LIBS=ON -DCMAKE_BUILD_TYPE=Release .
          make -j"$(nproc)"
          sudo make install
          sudo ldconfig

      - name: GoReleaser (linux only)
        uses: goreleaser/goreleaser-action@v6
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GORELEASER_GITHUB_TOKEN: ${{ secrets.GORELEASER_GITHUB_TOKEN }}
        with:
          version: v2
          # Limit to linux/amd64 so we don't cross-compile CGO.
          args: release --clean --skip=publish --config .goreleaser.yaml --id hexatiles \
                --single-target --goos linux --goarch amd64

      # Publish artifacts produced in previous step
      - name: GoReleaser publish (attach linux artifacts)
        uses: goreleaser/goreleaser-action@v6
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GORELEASER_GITHUB_TOKEN: ${{ secrets.GORELEASER_GITHUB_TOKEN }}
        with:
          version: v2
          args: release --clean --skip=build --config .goreleaser.yaml

  macos:
    name: release (macOS)
    runs-on: macos-14
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }
      - uses: actions/setup-go@v5
        with: { go-version: '1.22' }

      # Install H3 C lib for CGO
      - name: Install libh3
        run: brew install h3

      - name: GoReleaser (darwin only)
        uses: goreleaser/goreleaser-action@v6
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GORELEASER_GITHUB_TOKEN: ${{ secrets.GORELEASER_GITHUB_TOKEN }}
        with:
          version: v2
          # Build darwin/amd64 and darwin/arm64 natively
          args: release --clean --skip=publish --config .goreleaser.yaml --id hexatiles \
                --single-target --goos darwin --goarch amd64,arm64

      - name: GoReleaser publish (attach darwin artifacts + brew)
        uses: goreleaser/goreleaser-action@v6
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GORELEASER_GITHUB_TOKEN: ${{ secrets.GORELEASER_GITHUB_TOKEN }}
        with:
          version: v2
          args: release --clean --skip=build --config .goreleaser.yaml